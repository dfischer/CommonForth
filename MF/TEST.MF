CR .( Testing DO ... LOOP ) CR
: TEST ( LIMIT INC -- )
	SWAP 0 ?DO
	   #I . 
	DUP +LOOP DROP ;

10 1 TEST CR
100 10 TEST CR
100 9 TEST CR

: .ANDTHEN      ."  ANDTHEN " ;
: .ORELSE       ."  ORELSE " ;
: ANDTHEN       COMPILE .ANDTHEN \ ANDTHEN ; IMMEDIATE
: ORELSE        COMPILE .ORELSE  \ ORELSE ; IMMEDIATE

: .T/F  ( T/F -- )
        IF ."  TRUE " ELSE ."  FALSE " THEN ;
: =.T/F ( T/F -- )
        ." =" .T/F ;

: .THEN-AND     ."  THEN-AND " ;
: .ELSE-OR      ."  ELSE-OR " ;
: THEN-AND      \ THEN-AND COMPILE .THEN-AND ; IMMEDIATE
: ELSE-OR       \ ELSE-OR  COMPILE .ELSE-OR ; IMMEDIATE

: TT   TRUE  DUP .T/F ;
: FF   FALSE DUP .T/F ;

: TEST1
        TT ANDTHEN TT ANDTHEN TT ANDTHEN FF ANDTHEN TT THEN-AND =.T/F ;
: TEST2
        TT ANDTHEN FF ANDTHEN TT ANDTHEN FF THEN-AND =.T/F ;
: TEST3
        FF ANDTHEN TT ANDTHEN TT ANDTHEN TT THEN-AND =.T/F ;
: TEST4 
        TT ANDTHEN TT ANDTHEN TT ANDTHEN TT ANDTHEN TT THEN-AND =.T/F ;
: TEST5
        FF ORELSE FF ORELSE FF ORELSE TT ORELSE TT ELSE-OR =.T/F ;
: TEST6
        FF ORELSE TT ORELSE TT ORELSE FF ELSE-OR =.T/F ;
: TEST7
        TT ORELSE FF ORELSE FF ORELSE FF ELSE-OR =.T/F ;
: TEST8
        FF ORELSE FF ORELSE FF ORELSE FF ORELSE FF ELSE-OR =.T/F ;

: TEST9
        TT ANDTHEN TT ANDTHEN TT ANDTHEN
        FF ORELSE FF ORELSE TT ORELSE FF ELSE-OR  ANDTHEN FF THEN-AND =.T/F ;

CR .( ----- Testing ANDTHEN ----- ) CR
1 . TEST1 CR 2 . TEST2 CR 3 . TEST3 CR 4 . TEST4 CR 
.( ----- Testing ORELSE -----) CR
1 . TEST5 CR 2 . TEST6 CR 3 . TEST7 CR 4 . TEST8 CR 
.( ----- Mixing Testing -----) CR
TEST9

CR .( **** Testing INFIX syntax **** ) CR
.INFIX
: TESTIFX  
      ." (( 12 + 34 * 45 / 5 - 56 * 78 / 90 ))" 
      (( 12 + 34 * 45 / 5 - 56 * 78 / 90 )) 
      ."  Result = " . CR ;
TESTIFX FORGET TESTIFX
.INFIX
